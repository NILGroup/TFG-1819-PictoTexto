{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/constants/constant.service.ts","webpack:///./src/app/finder/assets/finder.component.css","webpack:///./src/app/finder/assets/finder.component.html","webpack:///./src/app/finder/finder.component.ts","webpack:///./src/app/finder/service/finder-service.service.ts","webpack:///./src/app/finder/transformer/finder-transformer.transformer.ts","webpack:///./src/app/finder/transformer/picto.ts","webpack:///./src/app/picto-translator/assets/picto-translator.component.css","webpack:///./src/app/picto-translator/assets/picto-translator.component.html","webpack:///./src/app/picto-translator/picto-translator.component.ts","webpack:///./src/app/picto-translator/service/picto-translator.service.ts","webpack:///./src/app/translator/assets/translator.component.css","webpack:///./src/app/translator/assets/translator.component.html","webpack:///./src/app/translator/service/translator.service.ts","webpack:///./src/app/translator/translator.component.ts","webpack:///./src/app/utils/proxy/proxy-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,qZ;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,gBAAgB,CAAC;IAC3B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACF;AACf;AACY;AACR;AAEE;AACa;AAC6B;AACjB;AAkBxE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,qGAAwB;gBACxB,oFAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,0DAAW;gBACX,oEAAS;aACV;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;AC3BqB;AAG3C;IAAA;IAOA,CAAC;IALmB,2BAAc,GAAG,4BAA4B,CAAC;IAC9C,+BAAkB,GAAG,4CAA4C,CAAC;IAClE,gCAAmB,GAAG,iDAAiD,CAAC;IAJ/E,YAAY;QADxB,gEAAU,EAAE;OACA,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;;;;;ACHzB,+BAA+B,wCAAwC,KAAK,uBAAuB,2BAA2B,mBAAmB,oBAAoB,KAAK,+CAA+C,+gB;;;;;;;;;;;ACAzN,2oBAA2oB,SAAS,0LAA0L,QAAQ,8I;;;;;;;;;;;;;;;;;;;;ACA5yB;AACiC;AAEP;AACuB;AAQ3F;IAEE,yBAAqB,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;IAAG,CAAC;IAEpD,yCAAe,GAAf,UAAgB,IAAW;QAC1B,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACjG,CAAC;IAEA,wCAAc,GAAd,UAAe,IAAI;QAClB,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;IACpB,CAAC;IAEA,uCAAa,GAAb;QACC,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC;IAdU,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,oHAA6C;YAC7C,SAAS,EAAE,CAAC,2FAAa,EAAC,2GAAiB,EAAE,+EAAY,CAAC;;SAE3D,CAAC;+EAGoC,2FAAa;OAFtC,eAAe,CAiB3B;IAAD,sBAAC;CAAA;AAjB2B;;;;;;;;;;;;;;;;;;;;;ACZe;AAC4B;AACR;AAC4B;AAG3F;IACE,uBAAoB,YAA0B,EAAU,iBAAoC;QAAxE,iBAAY,GAAZ,YAAY,CAAc;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAI,CAAC;IAGjG,qCAAa,GAAb,UAAc,IAAW;QAAzB,iBAYC;QAXC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,+EAAY,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,EAAC,aAAa,CAAC;YAClH,SAAS,eAAe,CAAC,IAAI;gBAC3B,wBAAwB;gBACxB,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;YACrD,CAAC;YACD,SAAS,aAAa,CAAC,IAAI;gBACzB,wBAAwB;gBACxB,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACL,CAAC,CAAC,CAAC;IACH,CAAC;IAhBU,aAAa;QADzB,gEAAU,EAAE;+EAEuB,sFAAY,EAA6B,2GAAiB;OADjF,aAAa,CAiBzB;IAAD,oBAAC;CAAA;AAjByB;;;;;;;;;;;;;;;;;;;ACNiB;AACX;AAGhC;IAAA;IAUA,CAAC;IATG,wCAAY,GAAZ,UAAa,IAAW;QACpB,IAAI,OAAO,GAAU,EAAG,CAAC;QACzB,IAAI,CAAC,GAAC,CAAC,CAAC;QACR,KAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAC,EAAE,CAAC;YAChC,OAAO,CAAC,IAAI,CAAC,IAAI,4CAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAEzE,OAAO,OAAO,CAAC;IACnB,CAAC;IARQ,iBAAiB;QAD7B,gEAAU,EAAE;OACA,iBAAiB,CAU7B;IAAD,wBAAC;CAAA;AAV6B;;;;;;;;;;;;;ACJ9B;AAAA;AAAA;IAKI,eAAY,EAAE,EAAC,GAAG;QACd,IAAI,CAAC,EAAE,GAAC,EAAE,CAAC;QACX,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;IACjB,CAAC;IACL,YAAC;AAAD,CAAC;;;;;;;;;;;;;ACTD,+DAA+D,+K;;;;;;;;;;;ACA/D,qjBAAqjB,WAAW,2B;;;;;;;;;;;;;;;;;;;ACAthB;AACsD;AAC5B;AAQpE;IAEE,kCAAoB,sBAA8C;QAA9C,2BAAsB,GAAtB,sBAAsB,CAAwB;IAAM,CAAC;IAEzE,qDAAkB,GAAlB,UAAmB,IAAW;QAC5B,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACrI,CAAC;IAED,0DAAuB,GAAvB,UAAwB,IAAI;QAC1B,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAED,yDAAsB,GAAtB;QACE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC;IAdU,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,kJAAuD;YACvD,SAAS,EAAE,CAAC,gHAAsB,EAAE,+EAAY,CAAC;;SAElD,CAAC;+EAG4C,gHAAsB;OAFvD,wBAAwB,CAepC;IAAD,+BAAC;CAAA;AAfoC;;;;;;;;;;;;;;;;;;;;ACVM;AAC4B;AACR;AAI/D;IAGE,gCAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAGnD,sDAAqB,GAArB,UAAsB,IAAW;QAAjC,iBAYC;QAXC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,+EAAY,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAI,CAAC,EAAC,sBAAsB,CAAC;YACxI,SAAS,wBAAwB,CAAC,IAAI;gBACpC,wBAAwB;gBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC;YACD,SAAS,sBAAsB,CAAC,IAAI;gBAClC,wBAAwB;gBACxB,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACL,CAAC,CAAC,CAAC;IACH,CAAC;IAlBU,sBAAsB;QAHlC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAIkC,sFAAY;OAHnC,sBAAsB,CAoBlC;IAAD,6BAAC;CAAA;AApBkC;;;;;;;;;;;;ACNnC,+DAA+D,+J;;;;;;;;;;;ACA/D,4cAA4c,aAAa,uB;;;;;;;;;;;;;;;;;;;ACA9a;AAC6B;AACN;AAKlE;IAEE,2BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,iDAAqB,GAArB,UAAsB,KAAoB;QAA1C,iBAaC;QAZC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,+EAAY,CAAC,mBAAmB,EAAE,KAAK,CAAC;iBACrE,SAAS,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;YAC/C,SAAS,mBAAmB,CAAC,IAAI;gBAC/B,yBAAyB;gBACzB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC;YACD,SAAS,iBAAiB,CAAC,IAAI;gBAC7B,yBAAyB;gBACzB,MAAM,CAAC,IAAI,CAAC,CAAC;YACf,CAAC;QACT,CAAC,CAAC,CAAC;IACH,CAAC;IAjBU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAGkC,sFAAY;OAFnC,iBAAiB,CAkB7B;IAAD,wBAAC;CAAA;AAlB6B;;;;;;;;;;;;;;;;;;;;ACPoB;AACkB;AACc;AASlF;IAIE,6BAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAI,CAAC;IAE7D,0CAAY,GAAZ;QACE,IAAI,KAAK,CAAC;QACV,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACvH,CAAC;IAGD,gDAAkB,GAAlB,UAAmB,IAAI;QACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,+CAAiB,GAAjB,UAAkB,IAAI;QACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IApBU,mBAAmB;QAP/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,gIAAiD;YACjD,SAAS,EAAE,CAAC,+FAAiB,EAAE,+EAAY,CAAC;;SAE7C,CAAC;+EAMuC,+FAAiB;OAJ7C,mBAAmB,CAsB/B;IAAD,0BAAC;CAAA;AAtB+B;;;;;;;;;;;;;;;;;;;;;ACXW;AACO;AACC;AAEL;AAI9C;IAEE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAGlC,gCAAS,GAAhB,UAAiB,IAAI,EAAE,GAAG;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;aACvB,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,EACR,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEM,6BAAM,GAAb,UAAc,GAAG;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aAChB,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,EACR,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEM,kCAAW,GAAlB,UAAmB,GAAG,EAAE,MAAM;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aACzC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9C,CAAC;IAGO,kCAAW,GAAnB,UAAoB,KAAwB;QAC1C,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,kEAAkE;YAClE,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC1D;aAAM;YACL,sDAAsD;YACtD,6DAA6D;YAC7D,OAAO,CAAC,KAAK,CACX,2BAAyB,KAAK,CAAC,MAAM,OAAI;iBACzC,eAAa,KAAK,CAAC,KAAO,EAAC,CAAC;SAC/B;QACD,wDAAwD;QACxD,OAAO,uDAAU,CACf,iDAAiD,CAAC,CAAC;IACvD,CAAC;IAxCU,YAAY;QADxB,gEAAU,EAAE;+EAGe,+DAAU;OAFzB,YAAY,CA0CxB;IAAD,mBAAC;CAAA;AA1CwB;;;;;;;;;;;;;ACRzB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm\\\">\\r\\n      <app-translator></app-translator>\\r\\n  </div>\\r\\n    <div class=\\\"col-sm\\\">\\r\\n      <app-finder></app-finder>\\r\\n    </div>\\r\\n</div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg\\\">\\r\\n      <app-picto-translator></app-picto-translator>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'pict2textFront';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { FinderComponent } from './finder/finder.component';\r\nimport { PictoTranslatorComponent } from './picto-translator/picto-translator.component';\r\nimport { TranslatorComponent } from './translator/translator.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FinderComponent,\r\n    PictoTranslatorComponent,\r\n    TranslatorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgbModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AppConstants {\r\n\r\n    static readonly pictoFinderURl = '/picto/getPicto?pictoName=';\r\n    static readonly translatorPictoURL = '/pictoTranslate/getPictoTranslate?pictoId=';\r\n    static readonly translatorPhraseURL = 'http://127.0.0.1:8080/apiNLG/createSimplePhrase';\r\n\r\n\r\n}","module.exports = \".pictoSlider{\\r\\n    background: rgba(226,226,226,1);\\r\\n}\\r\\n.carousel-caption {\\r\\n    position: relative;\\r\\n    left: auto;\\r\\n    right: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluZGVyL2Fzc2V0cy9maW5kZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLCtCQUErQjtBQUNuQztBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9maW5kZXIvYXNzZXRzL2ZpbmRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBpY3RvU2xpZGVye1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyMjYsMjI2LDIyNiwxKTtcclxufVxyXG4uY2Fyb3VzZWwtY2FwdGlvbiB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBsZWZ0OiBhdXRvO1xyXG4gICAgcmlnaHQ6IGF1dG87XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"form-group \\\">\\r\\n        <label>Nombre del picto</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pictoName\\\" placeholder=\\\"Introduzca el pictograma que desea buscar\\\"\\r\\n            name=\\\"pictoName\\\" #name>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"getPictosByName(name.value)\\\">Submit</button>\\r\\n\\r\\n    <div class=\\\"pictoSlider\\\">\\r\\n        <ngb-carousel *ngIf=\\\"myPicto\\\" [showNavigationIndicators]=\\\"false\\\">\\r\\n            <div *ngFor=\\\"let img of myPicto\\\">\\r\\n                <ng-template ngbSlide>\\r\\n                    <img src={{img.url}} class=\\\"img-responsive mx-auto d-flex justify-content-center flex-wrap\\\" alt=\\\"\\\" width=\\\"50%\\\">\\r\\n                    <div class=\\\"carousel-caption\\\">\\r\\n                        <p>{{img.id}}</p>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ngb-carousel>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport {FinderService} from 'src/app/finder/service/finder-service.service'\r\nimport {Picto} from 'src/app/finder/transformer/picto'\r\nimport { ProxyService } from '../utils/proxy/proxy-service.service';\r\nimport {FinderTransformer} from 'src/app/finder/transformer/finder-transformer.transformer'\r\n\r\n@Component({\r\n  selector: 'app-finder',\r\n  templateUrl: './assets/finder.component.html',\r\n  providers: [FinderService,FinderTransformer, ProxyService],\r\n  styleUrls: ['./assets/finder.component.css']\r\n})\r\nexport class FinderComponent  {\r\n  myPicto:Picto[]\r\n  constructor( private pictoService : FinderService) {}\r\n\r\n   getPictosByName(name:string){\r\n    this.pictoService.getPictByName(name).then(this.getPictoSucces.bind(this), this.getPictoError);\r\n  }\r\n\r\n   getPictoSucces(data){\r\n    this.myPicto=data;\r\n  }\r\n\r\n   getPictoError(){\r\n    console.log(\"todo mal en el componente\")\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProxyService} from 'src/app/utils/proxy/proxy-service.service'\r\nimport {AppConstants} from 'src/app/constants/constant.service'\r\nimport {FinderTransformer} from 'src/app/finder/transformer/finder-transformer.transformer'\r\n\r\n@Injectable()\r\nexport class FinderService {\r\n  constructor(private proxyService: ProxyService, private finderTransformer :FinderTransformer) { }\r\n\r\n\r\n  getPictByName(name:string) {\r\n    return new Promise((resolve, reject) => {\r\n      this.proxyService.getByName(name, AppConstants.pictoFinderURl).subscribe(getPictoSuccess.bind(this),getPictoError)\r\n      function getPictoSuccess(data){\r\n        //LLAMADA AL TRANSFORMER\r\n        resolve(this.finderTransformer.getPictoData(data));\r\n      }\r\n      function getPictoError(data){\r\n        //TRAMAMIENTO DE ERRORES\r\n        reject(data)\r\n      }\r\n  });\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Picto } from './picto';\r\n\r\n@Injectable()\r\nexport class FinderTransformer {\r\n    getPictoData(data:Object) {\r\n        let myPicto:Picto[] =[ ];\r\n        let i=0;\r\n        for(i=0; i<data['pictos'].length;++i)  \r\n            myPicto.push(new Picto(data['pictos'][i].id, data['pictos'][i].url));\r\n\r\n        return myPicto;\r\n    }\r\n\r\n}","export class Picto{\r\n    id:number;\r\n    url:string;\r\n    keywords:[]\r\n    \r\n    constructor(id,url){\r\n        this.id=id;\r\n        this.url=url;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BpY3RvLXRyYW5zbGF0b3IvYXNzZXRzL3BpY3RvLXRyYW5zbGF0b3IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"form-group \\\">\\r\\n      <label>Identificador del picto</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pictoId\\\" placeholder=\\\"Introduzca el pictograma que desea buscar\\\" name=\\\"pictoId\\\" #idPicto>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"getPictosTranslate(idPicto.value)\\\">Submit</button>\\r\\n  <div class=\\\"container\\\" *ngIf=\\\"translates\\\">\\r\\n    <p>El picto significa</p>\\r\\n    <div *ngFor=\\\"let translate of translates\\\">\\r\\n      <p>{{translate}}</p>\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport {PictoTranslatorService} from 'src/app/picto-translator/service/picto-translator.service'\r\nimport { ProxyService } from '../utils/proxy/proxy-service.service';\r\n\r\n@Component({\r\n  selector: 'app-picto-translator',\r\n  templateUrl: './assets/picto-translator.component.html',\r\n  providers: [PictoTranslatorService, ProxyService],\r\n  styleUrls: ['./assets/picto-translator.component.css']\r\n})\r\nexport class PictoTranslatorComponent{\r\n  translates:string;\r\n  constructor(private pictoTranslatorService :PictoTranslatorService  ) { }\r\n\r\n  getPictosTranslate(name:string){\r\n    this.pictoTranslatorService.getPictogramTranslate(name).then(this.getPictoTranslateSucces.bind(this), this.getPictoTranslateError);\r\n  }\r\n\r\n  getPictoTranslateSucces(data){\r\n    this.translates=data['meanings'];\r\n  }\r\n\r\n  getPictoTranslateError(){\r\n    console.log(\"todo mal en el componente\")\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProxyService} from 'src/app/utils/proxy/proxy-service.service'\r\nimport {AppConstants} from 'src/app/constants/constant.service'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PictoTranslatorService {\r\n\r\n\r\n  constructor(private proxyService: ProxyService) { }\r\n\r\n  \r\n  getPictogramTranslate(name:string) {\r\n    return new Promise((resolve, reject) => {\r\n      this.proxyService.getByName(name, AppConstants.translatorPictoURL).subscribe(getPictoTranslateSuccess.bind(this),getPictoTranslateError)\r\n      function getPictoTranslateSuccess(data){\r\n        //LLAMADA AL TRANSFORMER\r\n        resolve(data);\r\n      }\r\n      function getPictoTranslateError(data){\r\n        //TRAMAMIENTO DE ERRORES\r\n        reject(data)\r\n      }\r\n  });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zbGF0b3IvYXNzZXRzL3RyYW5zbGF0b3IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n      <div class=\\\"form-group \\\">\\r\\n          <label >Frase</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"subject\\\" placeholder=\\\"Introduzca un sujeto\\\" name=\\\"subject\\\"  [(ngModel)]=\\\"phrase\\\">\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"getTranslate()\\\">Submit</button>\\r\\n</div>\\r\\n<div class=\\\"container\\\" *ngIf=\\\"finalPhrase\\\">\\r\\n      <p>{{finalPhrase}}</p>\\r\\n</div>\\r\\n\\r\\n\"","import { Injectable } from '@angular/core';\r\nimport { ProxyService} from 'src/app/utils/proxy/proxy-service.service';\r\nimport { AppConstants } from 'src/app/constants/constant.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslatorService {\r\n\r\n  constructor(private proxyService: ProxyService) { }\r\n\r\n  getPictogramTranslate(words: Array<string>) {\r\n    return new Promise((resolve, reject) => {\r\n      this.proxyService.postElement(AppConstants.translatorPhraseURL, words)\r\n      .subscribe(getTranslateSuccess, getTranslateError);\r\n          function getTranslateSuccess(data) {\r\n            // LLAMADA AL TRANSFORMER\r\n            resolve(data);\r\n          }\r\n          function getTranslateError(data) {\r\n            // TRAMAMIENTO DE ERRORES\r\n            reject(data);\r\n          }\r\n  });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProxyService } from '../utils/proxy/proxy-service.service';\r\nimport { TranslatorService } from 'src/app/translator/service/translator.service';\r\n\r\n@Component({\r\n  selector: 'app-translator',\r\n  templateUrl: './assets/translator.component.html',\r\n  providers: [TranslatorService, ProxyService],\r\n  styleUrls: ['./assets/translator.component.css']\r\n})\r\n\r\nexport class TranslatorComponent {\r\n\r\n  phrase: string;\r\n  finalPhrase: string;\r\n  constructor(private translatorService: TranslatorService) { }\r\n\r\n  getTranslate() {\r\n    let words;\r\n    words = this.phrase.split(' ');\r\n    this.translatorService.getPictogramTranslate(words).then(this.getTranslateSucces.bind(this), this.getTranslateError);\r\n  }\r\n\r\n\r\n  getTranslateSucces(data) {\r\n    this.finalPhrase = data;\r\n  }\r\n\r\n  getTranslateError(data) {\r\n    console.log(data);\r\n    console.log('todo mal en el componente');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class ProxyService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  public getByName(name, url) {\r\n    return this.http.get(url + name)\r\n            .pipe(\r\n              retry(5),\r\n              catchError(this.handleError));\r\n  }\r\n\r\n  public getAll(url) {\r\n    return this.http.get(url)\r\n            .pipe(\r\n              retry(5),\r\n              catchError(this.handleError));\r\n  }\r\n\r\n  public postElement(url, object) {\r\n\r\n    return this.http.post(url, JSON.stringify(object))\r\n            .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  }\r\n\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}